// Generated by gencpp from file tutorial/assignment.msg
// DO NOT EDIT!


#ifndef TUTORIAL_MESSAGE_ASSIGNMENT_H
#define TUTORIAL_MESSAGE_ASSIGNMENT_H

#include <ros/service_traits.h>


#include <tutorial/assignmentRequest.h>
#include <tutorial/assignmentResponse.h>


namespace tutorial
{

struct assignment
{

typedef assignmentRequest Request;
typedef assignmentResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct assignment
} // namespace tutorial


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::tutorial::assignment > {
  static const char* value()
  {
    return "1d701094808d2d1d11adf0aa9a8a6193";
  }

  static const char* value(const ::tutorial::assignment&) { return value(); }
};

template<>
struct DataType< ::tutorial::assignment > {
  static const char* value()
  {
    return "tutorial/assignment";
  }

  static const char* value(const ::tutorial::assignment&) { return value(); }
};


// service_traits::MD5Sum< ::tutorial::assignmentRequest> should match 
// service_traits::MD5Sum< ::tutorial::assignment > 
template<>
struct MD5Sum< ::tutorial::assignmentRequest>
{
  static const char* value()
  {
    return MD5Sum< ::tutorial::assignment >::value();
  }
  static const char* value(const ::tutorial::assignmentRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::tutorial::assignmentRequest> should match 
// service_traits::DataType< ::tutorial::assignment > 
template<>
struct DataType< ::tutorial::assignmentRequest>
{
  static const char* value()
  {
    return DataType< ::tutorial::assignment >::value();
  }
  static const char* value(const ::tutorial::assignmentRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::tutorial::assignmentResponse> should match 
// service_traits::MD5Sum< ::tutorial::assignment > 
template<>
struct MD5Sum< ::tutorial::assignmentResponse>
{
  static const char* value()
  {
    return MD5Sum< ::tutorial::assignment >::value();
  }
  static const char* value(const ::tutorial::assignmentResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::tutorial::assignmentResponse> should match 
// service_traits::DataType< ::tutorial::assignment > 
template<>
struct DataType< ::tutorial::assignmentResponse>
{
  static const char* value()
  {
    return DataType< ::tutorial::assignment >::value();
  }
  static const char* value(const ::tutorial::assignmentResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TUTORIAL_MESSAGE_ASSIGNMENT_H
